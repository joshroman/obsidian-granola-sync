name: CI

on:
  push:
    branches: [main, develop, 'phase-*', 'feature/*']
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Type Check
      run: npm run typecheck
    
    - name: Build
      run: npm run build
    
    - name: Run unit tests
      run: npm run test:unit -- --ci
      env:
        TZ: UTC
    
    # E2E tests require a display server and Obsidian GUI, which is not
    # available in standard GitHub Actions runners. These tests should be
    # run locally during development and potentially in a specialized
    # CI environment with virtual display support.
    #
    # - name: Run E2E tests
    #   if: matrix.os != 'windows-latest'  # Skip E2E on Windows for now
    #   run: npm run test:e2e
    #   env:
    #     TZ: UTC
    
    - name: Verify build output
      run: |
        if [ ! -f "main.js" ]; then
          echo "Build failed: main.js not found"
          exit 1
        fi
      shell: bash
    
    - name: Upload coverage
      if: matrix.node-version == '20.x' && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  build-release:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Package plugin
      run: |
        mkdir -p dist
        cp main.js manifest.json styles.css dist/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: obsidian-granola-sync
        path: dist/